{"version":3,"sources":["logo.svg","Style.js","Choice.js","Data.js","Decision.js","Console.js","Stats.js","Container.js","App.js","reportWebVitals.js","index.js"],"names":["StyledContainer","styled","div","StyledConsole","StyledAnswers","StyledChoice","StyledStats","StyledInstructions","Choice","onClick","this","props","title","desc","React","Component","decisions","question","choices","price","money","health","next","Decision","choice","arr","i","push","length","generateChoices","Console","decision","win","target","href","Stats","class","career","income","Container","state","questionIndex","dailyIncome","gameOver","instructions","restart","setState","random","Math","round","qIndex","console","log","getNext","toFixed","statClick","handleClick","App","className","style","textAlign","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff01184d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import styled from 'styled-components';\r\n\r\n// export const StyledContainer = styled.div`\r\n\r\n// `\r\n\r\nexport const StyledContainer = styled.div`\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translateX(-50%) translateY(-50%);\r\n    width: 70vw;\r\n    height: 70vh;\r\n    display: flex;\r\n\r\n    h1 {\r\n        text-align: center;\r\n    }\r\n`\r\n\r\nexport const StyledConsole = styled.div`\r\n    width: 70%;\r\n    border: 1px solid #eee;\r\n    border-radius: 2rem;\r\n    background: #fff;\r\n    padding: 0rem 2rem 1rem 2rem;\r\n`\r\n\r\nexport const StyledAnswers= styled.div`\r\n    display: flex;\r\n    //flex-wrap: wrap;\r\n`\r\n\r\nexport const StyledChoice = styled.div`\r\n    border-radius: 1rem;\r\n    background: lightblue;\r\n    width: 50%;\r\n    margin: 2rem;\r\n    padding: 1rem;\r\n\r\n    h1 {\r\n        font-size: 1.25rem;\r\n        font-style: italic;\r\n    }\r\n\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`\r\n\r\nexport const StyledStats = styled.div`\r\n    width: 30%;\r\n    //border: 1px solid #eee;\r\n    padding: 2rem;\r\n`\r\n\r\nexport const StyledInstructions = styled.div`\r\n    text-align: center;\r\n    margin: 4rem auto;\r\n    width: 50vw;\r\n`\r\n","import React from 'react';\r\n\r\nimport { StyledChoice } from './Style';\r\n\r\nexport class Choice extends React.Component {\r\n\r\n    render () {\r\n        return (\r\n            <StyledChoice onClick={this.props.onClick}>\r\n                <h1>{this.props.title}</h1>\r\n                {this.props.desc}\r\n            </StyledChoice>\r\n        )\r\n    }\r\n}","const decisions = [\r\n    {\r\n        question: \"career choice\",\r\n        choices: [\r\n            {\r\n                title: \"work at construction site\",\r\n                desc: \"very tiring, risk of injuries, pay: $2.76/day\",\r\n                price: {\r\n                    money: 0,\r\n                    health: 0,\r\n                    next: -1 // -1 means random\r\n                }\r\n            }, \r\n            {\r\n                title: \"sell rice pudding\",\r\n                desc: \"profit: $1.55/day\",\r\n                price: {\r\n                    money: 0,\r\n                    health: 0,\r\n                    next: 2\r\n                }\r\n            }\r\n        ],\r\n    },\r\n    {\r\n        question: \"oh no! you broke your leg at the construction job. you need to heal to work and continue providing of the family, but medical bills are high.\",\r\n        choices: [\r\n            {\r\n                title: \"hospital\",\r\n                desc: \"cost: $10\",\r\n                price: {\r\n                    money: 10,\r\n                    health: 0,\r\n                    next: 2\r\n                }\r\n            }, \r\n            {\r\n                title: \"no hospital\",\r\n                desc: \"we need to save the money. i'll pay someone (with no official expertise) to wrap it up. a broken leg makes it much harder to find a job, of course...\",\r\n                price: {\r\n                    money: 2,\r\n                    health: 0,\r\n                    next: 0// no one wants to hire them for a job: GAME OVER - change to random\r\n                }\r\n            }\r\n        ],\r\n    },\r\n    {\r\n        question: \"meal time!\",\r\n        choices: [\r\n            {\r\n                title: \"rice\",\r\n                desc: \"cost: $0.50. relatively cheap, enough for everyone, but not so nutritious.\",\r\n                price: {\r\n                    money: 0.5,\r\n                    health: 3,\r\n                    next: 3\r\n                }\r\n            }, \r\n            {\r\n                title: \"beans\",\r\n                desc: \"cost: $1. more costly, but our health is important. we need nutrition to stay strong to work, and my children need to grow and stay healthy.\",\r\n                price: {\r\n                    money: 1,\r\n                    health: -4,\r\n                    next: 4\r\n                }\r\n            }\r\n        ],\r\n    },\r\n    {   // if construction work\r\n        question: \"at work, you feel faint - your energy levels are very low. food for you or save the money for your children?\",\r\n        choices: [\r\n            {\r\n                title: \"food for me\",\r\n                desc: \"if something happens to me, who will take care of my children?\",\r\n                price: {\r\n                    money: 0.5,\r\n                    health: 2,\r\n                    next: -1\r\n                }\r\n            }, \r\n            {\r\n                title: \"save for my children\",\r\n                desc: \"i can hold out for a bit longer. i need to invest money in their education, their future.\",\r\n                price: {\r\n                    money: 0,\r\n                    health: -4,\r\n                    next: -1\r\n                }\r\n            }\r\n        ],\r\n    },\r\n    {\r\n        question: \"the landlord is here...\",\r\n        choices: [\r\n            {\r\n                title: \"pay my rent\",\r\n                desc: \"cost: $5\",\r\n                price: {\r\n                    money: 5,\r\n                    health: 0,\r\n                    next: 9 // win\r\n                }\r\n            }, \r\n            // {\r\n            //     title: \"borrow money\",\r\n            //     desc: \"i'm going to borrow money to pay my rent so that i can continue paying for my children's education.\",\r\n            //     price: {\r\n            //         money: 2, // interest???\r\n            //         health: 0,\r\n            //         next: -1\r\n            //     }\r\n            // },\r\n            {\r\n                title: \"don't pay my rent\",\r\n                desc: \"we'll live in a makeshift house under the bridge. the conditions are worse, but we save $5/month\",\r\n                price: {\r\n                    money: 0,\r\n                    health: 2,\r\n                    next: -1\r\n                }\r\n            }\r\n        ],\r\n    },\r\n    {\r\n        question: \"it was a dark and stormy night under the bridge...\",\r\n        choices: [\r\n            {\r\n                title: \"go to work\",\r\n                desc: \"i'm putting my children at risk, but if i don't work, who will?\",\r\n                price: {\r\n                    money: 0, // temp: should be the daily income\r\n                    health: 0,\r\n                    next: -1\r\n                }\r\n            }, \r\n            {\r\n                title: \"stay home\",\r\n                desc: \"we're going to miss today's income, but what if something happens to my children while i'm gone? all that i do is for them anyways.\",\r\n                price: {\r\n                    money: 0,\r\n                    health: 0,\r\n                    next: -1\r\n                }\r\n            }\r\n        ],\r\n    },\r\n];\r\n\r\n// {\r\n//     question: \"question 2\",\r\n//     choices: [\r\n//         {\r\n//             title: \"choice 1\",\r\n//             desc: \"desc 1\",\r\n//             nextIndex: 1, \r\n//         }, \r\n//         {\r\n//             title: \"choice 2\",\r\n//             desc: \"desc 2\",\r\n//             nextIndex: 2\r\n//         }\r\n//     ],\r\n// },\r\n\r\nexport default decisions;","import React from 'react';\r\n\r\nimport { Choice } from './Choice';\r\nimport { StyledAnswers } from './Style';\r\n\r\nimport decisions from './Data';\r\n\r\nexport class Decision extends React.Component {\r\n    generateChoices () {\r\n        let arr = [];\r\n        let choice;\r\n        for (let i = 0; i < this.props.choices.length; i++) {\r\n            choice = <Choice \r\n                title={this.props.choices[i].title}\r\n                desc={this.props.choices[i].desc}\r\n                onClick={() => this.props.onClick(i)}\r\n            />\r\n            arr.push(choice);\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n            <h1>{this.props.question}</h1>\r\n                <StyledAnswers>\r\n                    {this.generateChoices()}\r\n                </StyledAnswers>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nimport { Decision } from './Decision';\r\nimport { StyledConsole } from './Style';\r\n\r\nexport class Console extends React.Component {\r\n\r\n    render () {\r\n        return (\r\n            <StyledConsole>\r\n                {this.props.decision ?\r\n                    <Decision \r\n                        question={this.props.question}\r\n                        choices={this.props.choices}\r\n                        onClick={(i) => this.props.onClick(i)}\r\n                    />\r\n                :\r\n                    <>\r\n                        <h1>you {this.props.win}!</h1>\r\n                            in reality, for people living in poverty, it's not a simple win or lose, and decisions are affected by more factors.<br/>\r\n                            however, we hope that this game gave you some insight into the difficult decisions that the poor must make to survive.<br/>\r\n                            As of 2020, about half of the world’s population live on or live with less than $2.50 in a day.\r\n                            <h2>why does poverty exist?</h2>\r\n                            <ul>\r\n                                <li>not enough jobs to go around at the bottom of the labor market</li>\r\n                                <li>limited access to clean water, education, etc.</li>\r\n                                <li>widening wealth gap that keep the poor poor or make them poorer</li>\r\n                                <li>natural disasters destroying homes</li>\r\n                                <li>corrupt governments</li>\r\n                            </ul>\r\n                            <h2>how can you help?</h2>\r\n                            <ul>\r\n                                <li>\r\n                                    donate: <a target=\"_blank\" href=\"https://peopleagainstpoverty.com/get-involved/donate/\">People Against Poverty</a>,&nbsp;\r\n                                    <a target=\"_blank\" href=\"https://donate.worldvision.org/give/poverty-in-america\">World Vision</a>\r\n                                </li>\r\n                                <li>\r\n                                    volunteer: <a target=\"_blank\" href=\"https://www.unicef.org/careers/volunteers-unicef\">UNICEF</a>,&nbsp;\r\n                                    <a target=\"_blank\" href=\"https://thp.org/\">The Hunger Project</a>,&nbsp;\r\n                                    <a target=\"_blank\" href=\"https://childrenshungeralliance.org/\">Children's Hunger Alliance</a>,&nbsp;\r\n                                    <a target=\"_blank\" href=\"https://www.roomtoread.org/\">Room to Read</a>,&nbsp;\r\n                                    your local soup kitchen\r\n                                </li>\r\n                            </ul>\r\n                    </>\r\n                }\r\n            </StyledConsole>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nimport { StyledStats } from './Style';\r\n\r\nexport class Stats extends React.Component {\r\n    render () {\r\n        return (\r\n            <StyledStats>\r\n                <h1>stats</h1>\r\n                <div class=\"stat\">\r\n                    <b>career:</b> {this.props.career}\r\n                </div>\r\n                <div class=\"stat\">\r\n                    <b>daily income:</b> {this.props.income}\r\n                </div>\r\n                <div class=\"stat\">\r\n                    <b>money:</b> ${this.props.money}\r\n                </div>\r\n                <div class=\"stat\">\r\n                    <b>health:</b> {this.props.health}\r\n                </div>\r\n\r\n                <button onClick={() => this.props.onClick(0)}>\r\n                    RESTART\r\n                </button>\r\n                <button onClick={() => this.props.onClick(1)}>\r\n                    HOW TO PLAY\r\n                </button>\r\n            </StyledStats>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nimport { Console } from './Console';\r\nimport { Stats } from './Stats';\r\n\r\nimport { StyledContainer, StyledInstructions } from './Style';\r\n\r\nimport decisions from './Data';\r\n\r\nexport class Container extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            money: 5,\r\n            health: 15,\r\n            questionIndex: 0,\r\n            career: \"\",\r\n            dailyIncome: 0,\r\n            gameOver: false,\r\n            win: \"\",\r\n            instructions: true\r\n        }\r\n    }\r\n\r\n    statClick (i) {\r\n        if (i == 0) {\r\n            this.restart();\r\n        } else {\r\n            this.setState({ instructions: true });\r\n        }\r\n    }\r\n\r\n    restart () {\r\n        this.setState({\r\n            money: 5,\r\n            health: 10, // maintain 10+\r\n            questionIndex: 0,\r\n            career: \"\",\r\n            dailyIncome: 0,\r\n            gameOver: false,\r\n            win: \"\",\r\n        });\r\n    }\r\n\r\n    /**\r\n     * decide whether user wins or loses\r\n     * @param i next index\r\n     */\r\n    gameOver (i) {\r\n        if (i == 9) {\r\n            this.setState({ win: \"win\" })\r\n        } else if (i == 0) {\r\n            this.setState({ win: \"lose\" })\r\n        }\r\n        this.setState({ gameOver: true });\r\n    }\r\n\r\n    /**\r\n     * randomly generate next question index\r\n     * @param i choice index \r\n     */\r\n    getNext (i) {\r\n        let random = Math.round(Math.random()*2);\r\n        let qIndex = this.state.questionIndex;\r\n        if (random == 0) {\r\n            // good\r\n            if (qIndex == 0) return 2; // no broken leg --> meal time\r\n            if (qIndex == 3) return 4; // you don't faint --> landlord\r\n            if (qIndex == 4) return 9;\r\n            if (qIndex == 5) return 9; // nothing happens to children --> win\r\n        } else {\r\n            // not good \r\n            if (qIndex == 0) return 1; // breaks leg\r\n            if (qIndex == 3) return 0; // you faint - game over \r\n            if (qIndex == 4) return 5;\r\n            if (qIndex == 5) return 0; // children drown? --> game over \r\n        }\r\n    }\r\n    \r\n    /**\r\n     * after decision is made, update stats as necessary and change question\r\n     * @param i choice index \r\n     */\r\n    handleClick (i) {\r\n        let price = decisions[this.state.questionIndex].choices[i].price;\r\n        // set career and daily income \r\n        if (this.state.questionIndex == 0) {\r\n            if (i == 0) {\r\n                this.setState({\r\n                    career: \"constructon site\",\r\n                    dailyIncome: 2.76\r\n                })\r\n            } else if (i == 1) {\r\n                this.setState({\r\n                    career: \"selling rice pudding\",\r\n                    dailyIncome: 1.55\r\n                })\r\n            }\r\n        } \r\n        // spend money\r\n        if (this.state.questionIndex == 2 || this.state.questionIndex == 3 || this.state.questionIndex == 4) {\r\n            if (this.state.money < price.money) {\r\n                console.log(\"not enough money\");\r\n                this.gameOver(0); \r\n            }\r\n        }\r\n        let next = price.next;\r\n        if (price.next === -1) {\r\n            next = this.getNext(i);\r\n            if (next == 0) this.gameOver(next);\r\n            if (next == 9) this.gameOver(next);\r\n        } else if (price.next === 0) {\r\n            this.gameOver(price.next)\r\n        } else if (price.next === 9) {\r\n            this.gameOver(price.next)\r\n        } \r\n        console.log(next);\r\n        if (next < 9 && next > 0) {\r\n            this.setState({\r\n                money: (this.state.money - price.money + this.state.dailyIncome).toFixed(2),\r\n                health: this.state.health - price.health,\r\n                questionIndex: next\r\n            });\r\n        }\r\n        // setTimeout(() => {\r\n        //     console.log(this.state.money)\r\n        // }, 1000)\r\n    }\r\n\r\n    render () {\r\n        if (this.state.instructions) {\r\n            return (\r\n                <StyledInstructions>\r\n                    <i>once you click <b>play</b>, you are a single mother struggling to take care of your two children.<br/>\r\n                    you must make difficult decisions that can decide you and your children's fates.</i><br/><br/>\r\n                    for many of these decisions, the ensuing decision you're forced to make is random. it's up to luck. work at a construction site? maybe you get lucky and nothing happens. or you could get injured...<br/><br/>\r\n                    in this simulation, each question = one day. therefore, for each question, your daily income will be added to your money. of course, it's not a perfect simulation, because in reality, you would lose more money every day for food.<br/><br/>\r\n                    you must keep <b>health</b> levels at least 15. if you can't afford to pay for necessary food or rent, you lose. you might also lose due to bad luck. you break your leg - maybe you can find a job, or maybe there are no jobs you can take on without two working legs.<br/><br/>\r\n                    you win if you just happen to be lucky and face \"no more struggles.\" of course, this is not true in the real world, because your poverty doesn't just end like that. \r\n                    <button onClick={() => {this.setState({ instructions: false })}}>PLAY</button> \r\n                </StyledInstructions>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <StyledContainer>\r\n                <Stats\r\n                    career={this.state.career}\r\n                    income={this.state.dailyIncome}\r\n                    money={this.state.money}\r\n                    health={this.state.health}\r\n                    onClick={(i) => this.statClick(i)}\r\n                />\r\n                {this.state.gameOver ?\r\n                    <Console decisions={false} win={this.state.win}/>\r\n                :\r\n                    <Console\r\n                        decision={true}\r\n                        question={decisions[this.state.questionIndex].question}\r\n                        choices={decisions[this.state.questionIndex].choices}\r\n                        onClick={(i) => this.handleClick(i)}\r\n                    />\r\n                }\r\n            </StyledContainer>\r\n        )\r\n    }\r\n}","import logo from './logo.svg';\nimport './App.css';\n\nimport { Container } from './Container';\nimport { StyledOverlay } from './Style';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1 style={{textAlign: \"center\"}}>The Game of Life: But You're Poor</h1>\n      <Container/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}